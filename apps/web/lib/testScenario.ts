// 전세 계약 검토 시뮬레이션 시나리오

export const TEST_SCENARIO_MESSAGES = [
  {
    delay: 800,
    content: "안녕하세요! 집체크 AI입니다. 🏠\n\n전세 계약 검토를 시작하겠습니다.\n검토하실 물건의 주소를 확인해주세요."
  },
  {
    delay: 1200,
    content: "📍 **입력하신 주소**\n경기도 수원시 영통구 영통로 123, ○○아파트 803동 1203호\n\n주소가 확인되었습니다.\n지금부터 단계별로 계약 리스크를 분석하겠습니다."
  },
  {
    delay: 1500,
    content: "📋 **[1단계] 등기부등본 분석 중...**\n\n권리관계를 확인하고 있습니다."
  },
  {
    delay: 2000,
    content: "📋 **[1단계] 등기부등본 분석 완료**\n\n**갑구 (소유권)**\n• 소유자: 김○○ (2018년 5월 취득)\n• 가압류/가처분: 없음 ✅\n• 예고등기: 없음 ✅\n\n**을구 (소유권 외 권리)**\n• **1순위**: 근저당권 3.2억원 (○○은행)\n• **2순위**: 전세권 2억원 (기존 임차인)\n• **3순위**: 귀하의 전세 예정 순위\n\n⚠️ **주의사항**\n선순위 채권 총액: 5.2억원\n예상 매매가 대비 약 61%를 차지합니다."
  },
  {
    delay: 1800,
    content: "🏢 **[2단계] 건축물대장 검토 중...**\n\n건축물의 적법성을 확인하고 있습니다."
  },
  {
    delay: 2200,
    content: "🏢 **[2단계] 건축물대장 검토 완료**\n\n✅ **위반건축물 여부**: 해당없음\n✅ **사용승인일**: 2007년 5월 12일\n✅ **건물 용도**: 공동주택(아파트)\n✅ **전용면적**: 84.92㎡ (약 25.7평)\n✅ **용적률/건폐율**: 정상 범위 내\n✅ **주차장**: 세대당 1.2대 확보\n\n건축물 관련 법적 문제는 발견되지 않았습니다."
  },
  {
    delay: 1500,
    content: "📊 **[3단계] 시세 분석 중...**\n\n주변 실거래가 및 전세 시세를 조회하고 있습니다."
  },
  {
    delay: 2500,
    content: "📊 **[3단계] 시세 분석 완료**\n\n**최근 3개월 실거래가**\n• 매매: 8.2억 ~ 8.5억원 (평균 8.35억)\n• 전세: 5.5억 ~ 5.8억원 (평균 5.65억)\n• 월세: 보증금 2억 + 월 80만원\n\n**전세가율 분석**\n• 현재 전세가율: 약 67.7%\n• 안전 기준: 70% 이하 ✅\n• 위험 수준: 80% 이상 ⚠️\n\n**경매 낙찰 정보**\n• 최근 1년 낙찰가: 7.2억원\n• 낙찰률: 약 87%\n\n💡 전세가율이 안전 범위 내에 있습니다."
  },
  {
    delay: 2000,
    content: "🔍 **[4단계] 임대인 재무상태 분석 중...**\n\n임대인의 다중채무 및 세금 체납 여부를 확인하고 있습니다."
  },
  {
    delay: 2300,
    content: "🔍 **[4단계] 임대인 재무상태 분석 완료**\n\n**확인 결과**\n✅ 국세 체납: 없음\n✅ 지방세 체납: 없음\n⚠️ 타 물건 근저당: 1건 존재 (별도 아파트)\n✅ 개인회생/파산: 이력 없음\n\n**종합 평가**\n전반적인 재무상태는 양호한 편입니다.\n다만, 타 물건에 근저당이 설정되어 있어 재무 상황을 주의깊게 모니터링할 필요가 있습니다."
  },
  {
    delay: 1800,
    content: "⚖️ **[5단계] 법적 리스크 검토 중...**\n\n소송, 압류, 가압류 등 법적 분쟁 여부를 확인하고 있습니다."
  },
  {
    delay: 2000,
    content: "⚖️ **[5단계] 법적 리스크 검토 완료**\n\n**법원 등기 확인**\n✅ 진행 중인 소송: 없음\n✅ 가압류: 없음\n✅ 가처분: 없음\n✅ 경매 신청: 없음\n✅ 임의경매: 없음\n\n**건축/행정 위반**\n✅ 건축법 위반: 없음\n✅ 불법 증축/개축: 없음\n✅ 용도변경 위반: 없음\n\n법적 리스크는 발견되지 않았습니다."
  },
  {
    delay: 2500,
    content: "⚠️ **[6단계] 종합 리스크 평가**\n\n분석 결과를 종합하여 리스크 등급을 산정했습니다.\n\n**🟡 중간 위험 (주의 필요)**\n\n**긍정적 요소 (🟢)**\n✅ 건축물 적법성 확인\n✅ 법적 분쟁 없음\n✅ 전세가율 67.7% (안전 범위)\n✅ 임대인 세금 체납 없음\n✅ 위반건축물 아님\n\n**주의 요소 (🟡)**\n⚠️ 선순위 근저당 3.2억원 설정\n⚠️ 기존 전세권자 2억원 존재\n⚠️ 임대인 타 물건 근저당 보유\n⚠️ 선순위 채권 총 5.2억원 (매매가 대비 61%)\n\n**위험 요소 (🔴)**\n없음"
  },
  {
    delay: 2800,
    content: "✅ **[최종 권고사항]**\n\n종합 분석 결과, 계약 진행이 가능하나 아래 안전장치를 **반드시** 마련하시기 바랍니다.\n\n**1️⃣ 필수 안전장치**\n\n☑️ **전세보증보험 가입** (HUG 또는 SGI서울보증)\n   • 보증한도: 최대 5억원\n   • 가입 시점: 잔금 지불 전\n   • 보증료: 보증금의 0.128% ~ 0.154%\n\n☑️ **확정일자 받기**\n   • 계약 당일 즉시 신청\n   • 동사무소 또는 온라인(정부24)\n   • 수수료: 600원\n\n☑️ **전입신고**\n   • 입주 당일 즉시 완료\n   • 다음날 0시부터 대항력 발생\n\n**2️⃣ 계약서 특약사항 명시**\n\n📝 다음 내용을 특약사항에 반드시 기재하세요:\n\n```\n1. 임대인은 본 계약 체결 이후 해당 주택에 \n   추가 근저당권 설정을 할 수 없다.\n\n2. 임대인은 계약 종료 시 보증금 반환 지연 시 \n   연 12%의 지연이자를 지급한다.\n\n3. 임대인이 국세 또는 지방세를 체납하는 경우 \n   임차인은 즉시 계약을 해지할 수 있다.\n\n4. 기존 전세권자(2억원) 퇴거 확인 후 \n   잔금을 지급한다.\n```\n\n**3️⃣ 계약 전 재확인 사항**\n\n✔️ 등기부등본 최신본 (계약 당일)\n✔️ 임대인 신분증 원본 확인\n✔️ 인감증명서 (대리인 계약 시)\n✔️ 기존 임차인 퇴거 확인서\n✔️ 국세/지방세 완납증명서\n\n**4️⃣ 보증금 조정 권장**\n\n현재 조건: 5억 5천만원\n권장 조건: 5억원 이하\n\n이유:\n• 선순위 채권과의 안전 마진 확보\n• 전세보증보험 가입 용이\n• 만기 시 보증금 회수 리스크 감소\n\n**5️⃣ 긴급 연락처**\n\n📞 **전세피해지원센터**: 1533-5252\n📞 **주거복지센터**: 1600-0777\n📞 **한국부동산원**: 1644-2828\n📞 **HUG 주택도시보증공사**: 1566-9009\n\n---\n\n💬 추가로 궁금하신 사항이 있으시면 언제든 문의해주세요!"
  }
];

// 메시지를 스트리밍하는 시뮬레이션 함수
export async function simulateTestResponse(
  onChunk: (content: string) => void,
  onComplete: () => void
): Promise<void> {
  let fullContent = '';

  for (const message of TEST_SCENARIO_MESSAGES) {
    // 메시지 전 대기
    await new Promise(resolve => setTimeout(resolve, message.delay));

    // 전체 메시지를 누적
    if (fullContent) {
      fullContent += '\n\n';
    }
    fullContent += message.content;

    // 문자열을 한 글자씩 스트리밍
    const chars = message.content.split('');
    for (let i = 0; i < chars.length; i++) {
      onChunk(chars[i]);
      // 타이핑 속도 시뮬레이션 (8ms per character)
      await new Promise(resolve => setTimeout(resolve, 8));
    }

    // 메시지 사이 줄바꿈 추가
    onChunk('\n\n');
  }

  onComplete();
}
